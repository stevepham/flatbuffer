// automatically generated by the FlatBuffers compiler, do not modify

package com.ht117.flatbuffer.model

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class Contact : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : Contact {
        __init(_i, _bb)
        return this
    }
    val phone : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val phoneAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun phoneInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val email : String?
        get() {
            val o = __offset(6)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val emailAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun emailInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_1_12_0()
        fun getRootAsContact(_bb: ByteBuffer): Contact = getRootAsContact(_bb, Contact())
        fun getRootAsContact(_bb: ByteBuffer, obj: Contact): Contact {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createContact(builder: FlatBufferBuilder, phoneOffset: Int, emailOffset: Int) : Int {
            builder.startTable(2)
            addEmail(builder, emailOffset)
            addPhone(builder, phoneOffset)
            return endContact(builder)
        }
        fun startContact(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addPhone(builder: FlatBufferBuilder, phone: Int) = builder.addOffset(0, phone, 0)
        fun addEmail(builder: FlatBufferBuilder, email: Int) = builder.addOffset(1, email, 0)
        fun endContact(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
